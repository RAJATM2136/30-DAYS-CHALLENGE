// { Driver Code Starts
// Initial Template for C++

#include <bits/stdc++.h>
using namespace std;

 // } Driver Code Ends
// User function Template for C++

class Solution{
public:
    int dp[30][30],bp[30][30];
    string ans;
    char c;
    void print(int i,int j){
        if(i==j){ans+=c,c++;return ;
        }
        ans+='(';
        print(i,bp[i][j]);
        print(bp[i][j]+1,j);
        ans+=')';
    }
    
    int MCM(int i,int j, int a[]){
        if(i==j)
        return 0;
        if(dp[i][j]!=-1)return dp[i][j];
        int tans=INT_MAX;
        int tempans;
        int idx;
        for(int k=i;k<j;k++){
            dp[i][k]=MCM(i,k,a);
            dp[k+1][j]=MCM(k+1,j,a);
            tempans=dp[i][k]+dp[k+1][j]+a[i-1]*a[k]*a[j];
            if(tempans<=tans)tans=tempans,idx=k;
        }
        bp[i][j]=idx;
        return dp[i][j]=tans;
    }

    
    
    string matrixChainOrder(int a[], int n){
        memset(bp,-1,sizeof(bp));
        memset(dp,-1,sizeof(dp));
    MCM(1,n-1,a);
    ans="";
    c='A';
    print(1,n-1);
        return ans;
    }
};

// { Driver Code Starts.

int main(){
    int t;
    cin>>t;
    while(t--){
        int n;
        cin>>n;
        int p[n];
        for(int i = 0;i < n;i++)
            cin>>p[i];
        
        Solution ob;
        cout<<ob.matrixChainOrder(p, n)<<"\n";
    }
    return 0;
}  // } Driver Code Ends
class Solution {
public:
    int d1[4]={-1,1,0,0};
    int d2[4]={0,0,1,-1};
    bool isvalid(int x,int y,int n,int m){
        if(x>=0&&y>=0&&x<=n-1&&y<=m-1)return true;
        return false;
    }
    
    
    int orangesRotting(vector<vector<int>>& m) {
        queue<pair<int,int>> q;

        int l=0;
        for(int i=0;i<m.size();i++){
            for(int j=0;j<m[0].size();j++){
                if(m[i][j]==1)l++;
                if(m[i][j]==2)q.push({i,j}),l++;
            }
        }
        
        int ans=0;
        while(!q.empty()){
            int k=q.size();
            l-=k;
            while(k--&&!q.empty())
            {
                int x=q.front().first;
                int y=q.front().second;
                q.pop();
                for(int i=0;i<4;i++){
                    int X1=x+d1[i];
                        int Y1=y+d2[i];
                    if(isvalid(X1,Y1,m.size(),m[0].size())&&m[X1][Y1]==1)
                    {
                        m[X1][Y1]=2;
                        q.push({X1,Y1});}
                }
            }
            if(!q.empty())
            ans++;
           
        }
        if(l==0)return ans;
        else
            return -1;
        
    }
};
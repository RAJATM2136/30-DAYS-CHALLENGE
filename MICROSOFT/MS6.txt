// { Driver Code Starts
//Initial Template for C++

#include <bits/stdc++.h>
#include <string>

using namespace std;


 // } Driver Code Ends
//User function Template for C++

class Solution
{
    public:
    
    void fun(vector<string>& m,vector<string> &ans,int a[],int i,int n,string res){
      if(i==n){// means we reached end
       ans.push_back(res);
       return;
       
      }        
    
       for(int k=0;k<m[a[i]].length();k++){
           //remembernot to chaneg value of anything during recursion,so prefer passing it with function
        fun(m,ans,a,i+1,n,res+(m[a[i]][k]));//i and res
       }
        return ;
    }
    
    
    //Function to find list of all words possible by pressing given numbers.
    vector<string> possibleWords(int a[], int n)
    {
        //good ques
        vector<string> ans;
        vector<string> m(10);
        m[2]="abc";
        m[3]="def";
        m[4]="ghi";
        m[5]="jkl";
        m[6]="mno";
        m[7]="pqrs";
        m[8]="tuv";
        m[9]="wxyz";
        string res="";//this will store ans at every recursion so pass along the function
        fun(m,ans,a,0,n,res);
        return ans;
        
        

    }
};


// { Driver Code Starts.

int main() {
  
	int T;
	
	cin >> T; //testcases
	
	while(T--){ //while testcases exist
	   int N;
	    
	   cin >> N; //input size of array
	   
	   int a[N]; //declare the array
	   
	   for(int i =0;i<N;i++){
	       cin >> a[i]; //input the elements of array that are keys to be pressed
	   }
	   
	   Solution obj;
	   
	  vector <string> res = obj.possibleWords(a,N);
	  for (string i : res) cout << i << " ";
	   cout << endl;
	}
	
	return 0;
}  // } Driver Code Ends